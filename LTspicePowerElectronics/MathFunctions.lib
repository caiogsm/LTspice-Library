** Math operators


* Functions built in arbitrary behavioral voltage


.subckt Summer In1 In2 Out
B1 Out 0 V=({K1}*V(In1))+({K2}*V(In2))
.param K1=1 K2=1
.ends Summer

.subckt Subtractor In1 In2 Out
B1 Out 0 V=({K1}*V(In1))-({K2}*V(In2))
.param K1=1 K2=1
.ends Subtractor

.subckt Multiplier In1 In2 Out
B1 Out 0 V=V(In1)*V(In2)
.ends Multiplier

.subckt Divider In1 In2 Out
B1 Out 0 V=V(In1)/V(In2)
.ends Divider

.subckt SquareRoot In1 Out
B1 Out 0 V=sqrt(V(In1))
.ends SquareRoot

.subckt Power In1 Out
B1 Out 0 V={K1}*pow(V(In1),{K2})
.param K1=1 K2=1
.ends Power

.subckt Absolute In1 Out
B1 Out 0 V=abs(V(In1)) 
.ends Absolute

.subckt Exponential In1 Out
B1 Out 0 V={K1}*exp(V(In1))
.param K1=1 
.ends Exponential

.subckt Sign In1 Out
B1 Out 0 V=sgn(V(In1))
.ends Sign

.subckt Gain In1 Out
E1 Out 0 In1 0 {K}
.param K=1
.ends Gain

.subckt Log In1 Out
B1 Out 0 V=ln(V(In1))
.ends Log

.subckt LogBase10 In1 Out
B1 Out 0 V=log10(V(In1))
.ends LogBase10

* The input of the sine function block is in degree
.subckt Sine In1 Out
B1 Out 0 V=sin(V(In1)*0.01745329252) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Sine

.subckt SineRad In1 Out
B1 Out 0 V=sin(V(In1)) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends SineRad

* The input of the cosine function block is in degree
.subckt Cosine In1 Out
B1 Out 0 V=cos(V(In1)*0.01745329252) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Cosine

.subckt CosineRad In1 Out
B1 Out 0 V=cos(V(In1)) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends CosineRad

* The input of the tanget function block is in degree
.subckt Tangent In1 Out
B1 Out 0 V=tan(V(In1)*0.01745329252) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Tangent

.subckt TangentRad In1 Out
B1 Out 0 V=tan(V(In1)) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends TangentRad

* The output is equal to the inverse sine of the input, and it is in degree.
.subckt Arcsine In1 Out
B1 Out 0 V=asin(V(In1))*57.29577951 tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Arcsine

* The output is equal to the inverse cosine of the input, and it is in degree.
.subckt Arccosine In1 Out
B1 Out 0 V=acos(V(In1))*57.29577951 tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Arccosine

* The output is equal to the inverse tangent of the input, and it is in degree.
.subckt Arctangent In1 Out
B1 Out 0 V=atan(V(In1))*57.29577951 tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Arctangent

* The output of the arctangent 2 block is the inverse tangent of the ratio between the imaginary part y and the real part x of the input. 
.subckt Arctangent2 In1 In2 Out
B1 Out 0 V=atan2(V(In1),V(In2)) tripdt={tripdt} tripdv={tripdv}
.param tripdt=1e300 tripdv=1
.ends Arctangent2

.subckt Maximum In1 In2 Out
B1 Out 0 V=max(V(In1),V(In2))
.ends Maximum

.subckt Minimum In1 In2 Out
B1 Out 0 V=min(V(In1),V(In2))
.ends Minimum

.subckt Limiter In1 Out
B1 Out 0 V=if(V(In1)>={Vmax},{Vmax},if(V(In1)<={Vmin},{Vmin},V(In1)))
.param Vmax=1 Vmin=-1	
.ends Limiter

.subckt TimeIntegral In1 Out
B1 Out 0 V=idt(V(In1)) ic={InitVal}
.param InitVal=0	
.ends TimeIntegral

.subckt TimeDerivative In1 Out
B1 Out 0 V=ddt(V(In1)) 
.ends TimeDerivative

